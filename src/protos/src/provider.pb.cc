// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provider.proto

#include "provider.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace providerProto {
class ProviderDataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProviderDataRequest> _instance;
} _ProviderDataRequest_default_instance_;
class ProviderDataPayloadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProviderDataPayload> _instance;
} _ProviderDataPayload_default_instance_;
class UserDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserData> _instance;
} _UserData_default_instance_;
class UserTokenAndSymKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserTokenAndSymKey> _instance;
} _UserTokenAndSymKey_default_instance_;
class RevocRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RevocRequest> _instance;
} _RevocRequest_default_instance_;
class RevocResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RevocResponse> _instance;
} _RevocResponse_default_instance_;
class UserCredentialsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserCredentials> _instance;
} _UserCredentials_default_instance_;
class NewTokenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NewToken> _instance;
} _NewToken_default_instance_;
}  // namespace providerProto
static void InitDefaultsProviderDataRequest_provider_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::providerProto::_ProviderDataRequest_default_instance_;
    new (ptr) ::providerProto::ProviderDataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::providerProto::ProviderDataRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProviderDataRequest_provider_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProviderDataRequest_provider_2eproto}, {}};

static void InitDefaultsProviderDataPayload_provider_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::providerProto::_ProviderDataPayload_default_instance_;
    new (ptr) ::providerProto::ProviderDataPayload();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::providerProto::ProviderDataPayload::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProviderDataPayload_provider_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProviderDataPayload_provider_2eproto}, {}};

static void InitDefaultsUserData_provider_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::providerProto::_UserData_default_instance_;
    new (ptr) ::providerProto::UserData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::providerProto::UserData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserData_provider_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserData_provider_2eproto}, {}};

static void InitDefaultsUserTokenAndSymKey_provider_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::providerProto::_UserTokenAndSymKey_default_instance_;
    new (ptr) ::providerProto::UserTokenAndSymKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::providerProto::UserTokenAndSymKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserTokenAndSymKey_provider_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserTokenAndSymKey_provider_2eproto}, {}};

static void InitDefaultsRevocRequest_provider_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::providerProto::_RevocRequest_default_instance_;
    new (ptr) ::providerProto::RevocRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::providerProto::RevocRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RevocRequest_provider_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRevocRequest_provider_2eproto}, {}};

static void InitDefaultsRevocResponse_provider_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::providerProto::_RevocResponse_default_instance_;
    new (ptr) ::providerProto::RevocResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::providerProto::RevocResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RevocResponse_provider_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRevocResponse_provider_2eproto}, {}};

static void InitDefaultsUserCredentials_provider_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::providerProto::_UserCredentials_default_instance_;
    new (ptr) ::providerProto::UserCredentials();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::providerProto::UserCredentials::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserCredentials_provider_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserCredentials_provider_2eproto}, {}};

static void InitDefaultsNewToken_provider_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::providerProto::_NewToken_default_instance_;
    new (ptr) ::providerProto::NewToken();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::providerProto::NewToken::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NewToken_provider_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNewToken_provider_2eproto}, {}};

void InitDefaults_provider_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_ProviderDataRequest_provider_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProviderDataPayload_provider_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserData_provider_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserTokenAndSymKey_provider_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RevocRequest_provider_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RevocResponse_provider_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserCredentials_provider_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NewToken_provider_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_provider_2eproto[8];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_provider_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_provider_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_provider_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::providerProto::ProviderDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::providerProto::ProviderDataRequest, content_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::providerProto::ProviderDataPayload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::providerProto::ProviderDataPayload, data_),
  PROTOBUF_FIELD_OFFSET(::providerProto::ProviderDataPayload, access_level_),
  PROTOBUF_FIELD_OFFSET(::providerProto::ProviderDataPayload, msg_),
  PROTOBUF_FIELD_OFFSET(::providerProto::ProviderDataPayload, response_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::providerProto::UserData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::providerProto::UserData, username_),
  PROTOBUF_FIELD_OFFSET(::providerProto::UserData, password_),
  PROTOBUF_FIELD_OFFSET(::providerProto::UserData, access_level_),
  PROTOBUF_FIELD_OFFSET(::providerProto::UserData, optional_data_),
  PROTOBUF_FIELD_OFFSET(::providerProto::UserData, certu_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::providerProto::UserTokenAndSymKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::providerProto::UserTokenAndSymKey, token_),
  PROTOBUF_FIELD_OFFSET(::providerProto::UserTokenAndSymKey, symkey_),
  PROTOBUF_FIELD_OFFSET(::providerProto::UserTokenAndSymKey, symkey_length_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::providerProto::RevocRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::providerProto::RevocRequest, revoc_request_),
  PROTOBUF_FIELD_OFFSET(::providerProto::RevocRequest, request_signature_),
  PROTOBUF_FIELD_OFFSET(::providerProto::RevocRequest, user_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::providerProto::RevocResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::providerProto::RevocResponse, msg_),
  PROTOBUF_FIELD_OFFSET(::providerProto::RevocResponse, response_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::providerProto::UserCredentials, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::providerProto::UserCredentials, username_),
  PROTOBUF_FIELD_OFFSET(::providerProto::UserCredentials, password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::providerProto::NewToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::providerProto::NewToken, user_token_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::providerProto::ProviderDataRequest)},
  { 6, -1, sizeof(::providerProto::ProviderDataPayload)},
  { 15, -1, sizeof(::providerProto::UserData)},
  { 25, -1, sizeof(::providerProto::UserTokenAndSymKey)},
  { 33, -1, sizeof(::providerProto::RevocRequest)},
  { 41, -1, sizeof(::providerProto::RevocResponse)},
  { 48, -1, sizeof(::providerProto::UserCredentials)},
  { 55, -1, sizeof(::providerProto::NewToken)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::providerProto::_ProviderDataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::providerProto::_ProviderDataPayload_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::providerProto::_UserData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::providerProto::_UserTokenAndSymKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::providerProto::_RevocRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::providerProto::_RevocResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::providerProto::_UserCredentials_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::providerProto::_NewToken_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_provider_2eproto = {
  {}, AddDescriptors_provider_2eproto, "provider.proto", schemas,
  file_default_instances, TableStruct_provider_2eproto::offsets,
  file_level_metadata_provider_2eproto, 8, file_level_enum_descriptors_provider_2eproto, file_level_service_descriptors_provider_2eproto,
};

const char descriptor_table_protodef_provider_2eproto[] =
  "\n\016provider.proto\022\rproviderProto\"+\n\023Provi"
  "derDataRequest\022\024\n\014content_name\030\001 \001(\t\"]\n\023"
  "ProviderDataPayload\022\014\n\004data\030\001 \001(\t\022\024\n\014acc"
  "ess_level\030\002 \001(\005\022\013\n\003msg\030\003 \001(\t\022\025\n\rresponse"
  "_code\030\004 \001(\005\"j\n\010UserData\022\020\n\010username\030\001 \001("
  "\t\022\020\n\010password\030\002 \001(\t\022\024\n\014access_level\030\003 \001("
  "\005\022\025\n\roptional_data\030\004 \001(\t\022\r\n\005certu\030\005 \001(\t\""
  "J\n\022UserTokenAndSymKey\022\r\n\005token\030\001 \001(\t\022\016\n\006"
  "symkey\030\002 \001(\t\022\025\n\rsymkey_length\030\003 \001(\005\"T\n\014R"
  "evocRequest\022\025\n\rrevoc_request\030\001 \001(\t\022\031\n\021re"
  "quest_signature\030\002 \001(\t\022\022\n\nuser_token\030\003 \001("
  "\t\"3\n\rRevocResponse\022\013\n\003msg\030\001 \001(\t\022\025\n\rrespo"
  "nse_code\030\002 \001(\005\"5\n\017UserCredentials\022\020\n\010use"
  "rname\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\"\036\n\010NewToke"
  "n\022\022\n\nuser_token\030\001 \001(\t2\337\002\n\017ProviderServic"
  "e\022c\n\027requestDataFromProvider\022\".providerP"
  "roto.ProviderDataRequest\032\".providerProto"
  ".ProviderDataPayload\"\000\022L\n\014registerUser\022\027"
  ".providerProto.UserData\032!.providerProto."
  "UserTokenAndSymKey\"\000\022P\n\021requestRevocatio"
  "n\022\033.providerProto.RevocRequest\032\034.provide"
  "rProto.RevocResponse\"\000\022G\n\nrenewToken\022\036.p"
  "roviderProto.UserCredentials\032\027.providerP"
  "roto.NewToken\"\000b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_provider_2eproto = {
  false, InitDefaults_provider_2eproto, 
  descriptor_table_protodef_provider_2eproto,
  "provider.proto", &assign_descriptors_table_provider_2eproto, 943,
};

void AddDescriptors_provider_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_provider_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_provider_2eproto = []() { AddDescriptors_provider_2eproto(); return true; }();
namespace providerProto {

// ===================================================================

void ProviderDataRequest::InitAsDefaultInstance() {
}
class ProviderDataRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProviderDataRequest::kContentNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProviderDataRequest::ProviderDataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:providerProto.ProviderDataRequest)
}
ProviderDataRequest::ProviderDataRequest(const ProviderDataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content_name().size() > 0) {
    content_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_name_);
  }
  // @@protoc_insertion_point(copy_constructor:providerProto.ProviderDataRequest)
}

void ProviderDataRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ProviderDataRequest_provider_2eproto.base);
  content_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ProviderDataRequest::~ProviderDataRequest() {
  // @@protoc_insertion_point(destructor:providerProto.ProviderDataRequest)
  SharedDtor();
}

void ProviderDataRequest::SharedDtor() {
  content_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProviderDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProviderDataRequest& ProviderDataRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ProviderDataRequest_provider_2eproto.base);
  return *internal_default_instance();
}


void ProviderDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:providerProto.ProviderDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ProviderDataRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ProviderDataRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string content_name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("providerProto.ProviderDataRequest.content_name");
        object = msg->mutable_content_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ProviderDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:providerProto.ProviderDataRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string content_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content_name().data(), static_cast<int>(this->content_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "providerProto.ProviderDataRequest.content_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:providerProto.ProviderDataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:providerProto.ProviderDataRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ProviderDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:providerProto.ProviderDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content_name = 1;
  if (this->content_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content_name().data(), static_cast<int>(this->content_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.ProviderDataRequest.content_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->content_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:providerProto.ProviderDataRequest)
}

::google::protobuf::uint8* ProviderDataRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:providerProto.ProviderDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content_name = 1;
  if (this->content_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content_name().data(), static_cast<int>(this->content_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.ProviderDataRequest.content_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:providerProto.ProviderDataRequest)
  return target;
}

size_t ProviderDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:providerProto.ProviderDataRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content_name = 1;
  if (this->content_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProviderDataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:providerProto.ProviderDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ProviderDataRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ProviderDataRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:providerProto.ProviderDataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:providerProto.ProviderDataRequest)
    MergeFrom(*source);
  }
}

void ProviderDataRequest::MergeFrom(const ProviderDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:providerProto.ProviderDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content_name().size() > 0) {

    content_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_name_);
  }
}

void ProviderDataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:providerProto.ProviderDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProviderDataRequest::CopyFrom(const ProviderDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:providerProto.ProviderDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProviderDataRequest::IsInitialized() const {
  return true;
}

void ProviderDataRequest::Swap(ProviderDataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProviderDataRequest::InternalSwap(ProviderDataRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  content_name_.Swap(&other->content_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ProviderDataRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_provider_2eproto);
  return ::file_level_metadata_provider_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ProviderDataPayload::InitAsDefaultInstance() {
}
class ProviderDataPayload::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProviderDataPayload::kDataFieldNumber;
const int ProviderDataPayload::kAccessLevelFieldNumber;
const int ProviderDataPayload::kMsgFieldNumber;
const int ProviderDataPayload::kResponseCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProviderDataPayload::ProviderDataPayload()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:providerProto.ProviderDataPayload)
}
ProviderDataPayload::ProviderDataPayload(const ProviderDataPayload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&access_level_, &from.access_level_,
    static_cast<size_t>(reinterpret_cast<char*>(&response_code_) -
    reinterpret_cast<char*>(&access_level_)) + sizeof(response_code_));
  // @@protoc_insertion_point(copy_constructor:providerProto.ProviderDataPayload)
}

void ProviderDataPayload::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ProviderDataPayload_provider_2eproto.base);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&access_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_code_) -
      reinterpret_cast<char*>(&access_level_)) + sizeof(response_code_));
}

ProviderDataPayload::~ProviderDataPayload() {
  // @@protoc_insertion_point(destructor:providerProto.ProviderDataPayload)
  SharedDtor();
}

void ProviderDataPayload::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProviderDataPayload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProviderDataPayload& ProviderDataPayload::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ProviderDataPayload_provider_2eproto.base);
  return *internal_default_instance();
}


void ProviderDataPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:providerProto.ProviderDataPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&access_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_code_) -
      reinterpret_cast<char*>(&access_level_)) + sizeof(response_code_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ProviderDataPayload::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ProviderDataPayload*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string data = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("providerProto.ProviderDataPayload.data");
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 access_level = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_access_level(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string msg = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("providerProto.ProviderDataPayload.msg");
        object = msg->mutable_msg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 response_code = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_response_code(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ProviderDataPayload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:providerProto.ProviderDataPayload)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "providerProto.ProviderDataPayload.data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 access_level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &access_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "providerProto.ProviderDataPayload.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 response_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &response_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:providerProto.ProviderDataPayload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:providerProto.ProviderDataPayload)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ProviderDataPayload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:providerProto.ProviderDataPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.ProviderDataPayload.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  // int32 access_level = 2;
  if (this->access_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->access_level(), output);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.ProviderDataPayload.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  // int32 response_code = 4;
  if (this->response_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->response_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:providerProto.ProviderDataPayload)
}

::google::protobuf::uint8* ProviderDataPayload::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:providerProto.ProviderDataPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.ProviderDataPayload.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  // int32 access_level = 2;
  if (this->access_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->access_level(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.ProviderDataPayload.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  // int32 response_code = 4;
  if (this->response_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->response_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:providerProto.ProviderDataPayload)
  return target;
}

size_t ProviderDataPayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:providerProto.ProviderDataPayload)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // int32 access_level = 2;
  if (this->access_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->access_level());
  }

  // int32 response_code = 4;
  if (this->response_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->response_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProviderDataPayload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:providerProto.ProviderDataPayload)
  GOOGLE_DCHECK_NE(&from, this);
  const ProviderDataPayload* source =
      ::google::protobuf::DynamicCastToGenerated<ProviderDataPayload>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:providerProto.ProviderDataPayload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:providerProto.ProviderDataPayload)
    MergeFrom(*source);
  }
}

void ProviderDataPayload::MergeFrom(const ProviderDataPayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:providerProto.ProviderDataPayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.access_level() != 0) {
    set_access_level(from.access_level());
  }
  if (from.response_code() != 0) {
    set_response_code(from.response_code());
  }
}

void ProviderDataPayload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:providerProto.ProviderDataPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProviderDataPayload::CopyFrom(const ProviderDataPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:providerProto.ProviderDataPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProviderDataPayload::IsInitialized() const {
  return true;
}

void ProviderDataPayload::Swap(ProviderDataPayload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProviderDataPayload::InternalSwap(ProviderDataPayload* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(access_level_, other->access_level_);
  swap(response_code_, other->response_code_);
}

::google::protobuf::Metadata ProviderDataPayload::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_provider_2eproto);
  return ::file_level_metadata_provider_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UserData::InitAsDefaultInstance() {
}
class UserData::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserData::kUsernameFieldNumber;
const int UserData::kPasswordFieldNumber;
const int UserData::kAccessLevelFieldNumber;
const int UserData::kOptionalDataFieldNumber;
const int UserData::kCertuFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserData::UserData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:providerProto.UserData)
}
UserData::UserData(const UserData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  optional_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.optional_data().size() > 0) {
    optional_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optional_data_);
  }
  certu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.certu().size() > 0) {
    certu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.certu_);
  }
  access_level_ = from.access_level_;
  // @@protoc_insertion_point(copy_constructor:providerProto.UserData)
}

void UserData::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UserData_provider_2eproto.base);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  access_level_ = 0;
}

UserData::~UserData() {
  // @@protoc_insertion_point(destructor:providerProto.UserData)
  SharedDtor();
}

void UserData::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certu_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserData& UserData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UserData_provider_2eproto.base);
  return *internal_default_instance();
}


void UserData::Clear() {
// @@protoc_insertion_point(message_clear_start:providerProto.UserData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optional_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  access_level_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UserData::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UserData*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string username = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("providerProto.UserData.username");
        object = msg->mutable_username();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string password = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("providerProto.UserData.password");
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 access_level = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_access_level(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string optional_data = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("providerProto.UserData.optional_data");
        object = msg->mutable_optional_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string certu = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("providerProto.UserData.certu");
        object = msg->mutable_certu();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UserData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:providerProto.UserData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "providerProto.UserData.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "providerProto.UserData.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 access_level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &access_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string optional_data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optional_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->optional_data().data(), static_cast<int>(this->optional_data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "providerProto.UserData.optional_data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string certu = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_certu()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->certu().data(), static_cast<int>(this->certu().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "providerProto.UserData.certu"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:providerProto.UserData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:providerProto.UserData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UserData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:providerProto.UserData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.UserData.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.UserData.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // int32 access_level = 3;
  if (this->access_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->access_level(), output);
  }

  // string optional_data = 4;
  if (this->optional_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optional_data().data(), static_cast<int>(this->optional_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.UserData.optional_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->optional_data(), output);
  }

  // string certu = 5;
  if (this->certu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->certu().data(), static_cast<int>(this->certu().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.UserData.certu");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->certu(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:providerProto.UserData)
}

::google::protobuf::uint8* UserData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:providerProto.UserData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.UserData.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.UserData.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // int32 access_level = 3;
  if (this->access_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->access_level(), target);
  }

  // string optional_data = 4;
  if (this->optional_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optional_data().data(), static_cast<int>(this->optional_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.UserData.optional_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->optional_data(), target);
  }

  // string certu = 5;
  if (this->certu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->certu().data(), static_cast<int>(this->certu().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.UserData.certu");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->certu(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:providerProto.UserData)
  return target;
}

size_t UserData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:providerProto.UserData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string optional_data = 4;
  if (this->optional_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->optional_data());
  }

  // string certu = 5;
  if (this->certu().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->certu());
  }

  // int32 access_level = 3;
  if (this->access_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->access_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:providerProto.UserData)
  GOOGLE_DCHECK_NE(&from, this);
  const UserData* source =
      ::google::protobuf::DynamicCastToGenerated<UserData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:providerProto.UserData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:providerProto.UserData)
    MergeFrom(*source);
  }
}

void UserData::MergeFrom(const UserData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:providerProto.UserData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.optional_data().size() > 0) {

    optional_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optional_data_);
  }
  if (from.certu().size() > 0) {

    certu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.certu_);
  }
  if (from.access_level() != 0) {
    set_access_level(from.access_level());
  }
}

void UserData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:providerProto.UserData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserData::CopyFrom(const UserData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:providerProto.UserData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserData::IsInitialized() const {
  return true;
}

void UserData::Swap(UserData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserData::InternalSwap(UserData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  optional_data_.Swap(&other->optional_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  certu_.Swap(&other->certu_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(access_level_, other->access_level_);
}

::google::protobuf::Metadata UserData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_provider_2eproto);
  return ::file_level_metadata_provider_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UserTokenAndSymKey::InitAsDefaultInstance() {
}
class UserTokenAndSymKey::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserTokenAndSymKey::kTokenFieldNumber;
const int UserTokenAndSymKey::kSymkeyFieldNumber;
const int UserTokenAndSymKey::kSymkeyLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserTokenAndSymKey::UserTokenAndSymKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:providerProto.UserTokenAndSymKey)
}
UserTokenAndSymKey::UserTokenAndSymKey(const UserTokenAndSymKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  symkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symkey().size() > 0) {
    symkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symkey_);
  }
  symkey_length_ = from.symkey_length_;
  // @@protoc_insertion_point(copy_constructor:providerProto.UserTokenAndSymKey)
}

void UserTokenAndSymKey::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UserTokenAndSymKey_provider_2eproto.base);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symkey_length_ = 0;
}

UserTokenAndSymKey::~UserTokenAndSymKey() {
  // @@protoc_insertion_point(destructor:providerProto.UserTokenAndSymKey)
  SharedDtor();
}

void UserTokenAndSymKey::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserTokenAndSymKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserTokenAndSymKey& UserTokenAndSymKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UserTokenAndSymKey_provider_2eproto.base);
  return *internal_default_instance();
}


void UserTokenAndSymKey::Clear() {
// @@protoc_insertion_point(message_clear_start:providerProto.UserTokenAndSymKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symkey_length_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UserTokenAndSymKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UserTokenAndSymKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("providerProto.UserTokenAndSymKey.token");
        object = msg->mutable_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string symkey = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("providerProto.UserTokenAndSymKey.symkey");
        object = msg->mutable_symkey();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 symkey_length = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_symkey_length(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UserTokenAndSymKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:providerProto.UserTokenAndSymKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "providerProto.UserTokenAndSymKey.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string symkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symkey().data(), static_cast<int>(this->symkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "providerProto.UserTokenAndSymKey.symkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 symkey_length = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &symkey_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:providerProto.UserTokenAndSymKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:providerProto.UserTokenAndSymKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UserTokenAndSymKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:providerProto.UserTokenAndSymKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.UserTokenAndSymKey.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // string symkey = 2;
  if (this->symkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symkey().data(), static_cast<int>(this->symkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.UserTokenAndSymKey.symkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->symkey(), output);
  }

  // int32 symkey_length = 3;
  if (this->symkey_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->symkey_length(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:providerProto.UserTokenAndSymKey)
}

::google::protobuf::uint8* UserTokenAndSymKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:providerProto.UserTokenAndSymKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.UserTokenAndSymKey.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // string symkey = 2;
  if (this->symkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symkey().data(), static_cast<int>(this->symkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.UserTokenAndSymKey.symkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->symkey(), target);
  }

  // int32 symkey_length = 3;
  if (this->symkey_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->symkey_length(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:providerProto.UserTokenAndSymKey)
  return target;
}

size_t UserTokenAndSymKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:providerProto.UserTokenAndSymKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string symkey = 2;
  if (this->symkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symkey());
  }

  // int32 symkey_length = 3;
  if (this->symkey_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->symkey_length());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserTokenAndSymKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:providerProto.UserTokenAndSymKey)
  GOOGLE_DCHECK_NE(&from, this);
  const UserTokenAndSymKey* source =
      ::google::protobuf::DynamicCastToGenerated<UserTokenAndSymKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:providerProto.UserTokenAndSymKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:providerProto.UserTokenAndSymKey)
    MergeFrom(*source);
  }
}

void UserTokenAndSymKey::MergeFrom(const UserTokenAndSymKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:providerProto.UserTokenAndSymKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.symkey().size() > 0) {

    symkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symkey_);
  }
  if (from.symkey_length() != 0) {
    set_symkey_length(from.symkey_length());
  }
}

void UserTokenAndSymKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:providerProto.UserTokenAndSymKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserTokenAndSymKey::CopyFrom(const UserTokenAndSymKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:providerProto.UserTokenAndSymKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserTokenAndSymKey::IsInitialized() const {
  return true;
}

void UserTokenAndSymKey::Swap(UserTokenAndSymKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserTokenAndSymKey::InternalSwap(UserTokenAndSymKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  symkey_.Swap(&other->symkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(symkey_length_, other->symkey_length_);
}

::google::protobuf::Metadata UserTokenAndSymKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_provider_2eproto);
  return ::file_level_metadata_provider_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RevocRequest::InitAsDefaultInstance() {
}
class RevocRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RevocRequest::kRevocRequestFieldNumber;
const int RevocRequest::kRequestSignatureFieldNumber;
const int RevocRequest::kUserTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RevocRequest::RevocRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:providerProto.RevocRequest)
}
RevocRequest::RevocRequest(const RevocRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  revoc_request_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.revoc_request().size() > 0) {
    revoc_request_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.revoc_request_);
  }
  request_signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_signature().size() > 0) {
    request_signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_signature_);
  }
  user_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_token().size() > 0) {
    user_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_token_);
  }
  // @@protoc_insertion_point(copy_constructor:providerProto.RevocRequest)
}

void RevocRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RevocRequest_provider_2eproto.base);
  revoc_request_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RevocRequest::~RevocRequest() {
  // @@protoc_insertion_point(destructor:providerProto.RevocRequest)
  SharedDtor();
}

void RevocRequest::SharedDtor() {
  revoc_request_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RevocRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RevocRequest& RevocRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RevocRequest_provider_2eproto.base);
  return *internal_default_instance();
}


void RevocRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:providerProto.RevocRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  revoc_request_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RevocRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RevocRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string revoc_request = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("providerProto.RevocRequest.revoc_request");
        object = msg->mutable_revoc_request();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string request_signature = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("providerProto.RevocRequest.request_signature");
        object = msg->mutable_request_signature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string user_token = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("providerProto.RevocRequest.user_token");
        object = msg->mutable_user_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RevocRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:providerProto.RevocRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string revoc_request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_revoc_request()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->revoc_request().data(), static_cast<int>(this->revoc_request().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "providerProto.RevocRequest.revoc_request"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string request_signature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_signature().data(), static_cast<int>(this->request_signature().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "providerProto.RevocRequest.request_signature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_token().data(), static_cast<int>(this->user_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "providerProto.RevocRequest.user_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:providerProto.RevocRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:providerProto.RevocRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RevocRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:providerProto.RevocRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string revoc_request = 1;
  if (this->revoc_request().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->revoc_request().data(), static_cast<int>(this->revoc_request().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.RevocRequest.revoc_request");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->revoc_request(), output);
  }

  // string request_signature = 2;
  if (this->request_signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_signature().data(), static_cast<int>(this->request_signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.RevocRequest.request_signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->request_signature(), output);
  }

  // string user_token = 3;
  if (this->user_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_token().data(), static_cast<int>(this->user_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.RevocRequest.user_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->user_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:providerProto.RevocRequest)
}

::google::protobuf::uint8* RevocRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:providerProto.RevocRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string revoc_request = 1;
  if (this->revoc_request().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->revoc_request().data(), static_cast<int>(this->revoc_request().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.RevocRequest.revoc_request");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->revoc_request(), target);
  }

  // string request_signature = 2;
  if (this->request_signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_signature().data(), static_cast<int>(this->request_signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.RevocRequest.request_signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->request_signature(), target);
  }

  // string user_token = 3;
  if (this->user_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_token().data(), static_cast<int>(this->user_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.RevocRequest.user_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->user_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:providerProto.RevocRequest)
  return target;
}

size_t RevocRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:providerProto.RevocRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string revoc_request = 1;
  if (this->revoc_request().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->revoc_request());
  }

  // string request_signature = 2;
  if (this->request_signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_signature());
  }

  // string user_token = 3;
  if (this->user_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RevocRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:providerProto.RevocRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RevocRequest* source =
      ::google::protobuf::DynamicCastToGenerated<RevocRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:providerProto.RevocRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:providerProto.RevocRequest)
    MergeFrom(*source);
  }
}

void RevocRequest::MergeFrom(const RevocRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:providerProto.RevocRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.revoc_request().size() > 0) {

    revoc_request_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.revoc_request_);
  }
  if (from.request_signature().size() > 0) {

    request_signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_signature_);
  }
  if (from.user_token().size() > 0) {

    user_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_token_);
  }
}

void RevocRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:providerProto.RevocRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RevocRequest::CopyFrom(const RevocRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:providerProto.RevocRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RevocRequest::IsInitialized() const {
  return true;
}

void RevocRequest::Swap(RevocRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RevocRequest::InternalSwap(RevocRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  revoc_request_.Swap(&other->revoc_request_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  request_signature_.Swap(&other->request_signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_token_.Swap(&other->user_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata RevocRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_provider_2eproto);
  return ::file_level_metadata_provider_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RevocResponse::InitAsDefaultInstance() {
}
class RevocResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RevocResponse::kMsgFieldNumber;
const int RevocResponse::kResponseCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RevocResponse::RevocResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:providerProto.RevocResponse)
}
RevocResponse::RevocResponse(const RevocResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  response_code_ = from.response_code_;
  // @@protoc_insertion_point(copy_constructor:providerProto.RevocResponse)
}

void RevocResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RevocResponse_provider_2eproto.base);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_code_ = 0;
}

RevocResponse::~RevocResponse() {
  // @@protoc_insertion_point(destructor:providerProto.RevocResponse)
  SharedDtor();
}

void RevocResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RevocResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RevocResponse& RevocResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RevocResponse_provider_2eproto.base);
  return *internal_default_instance();
}


void RevocResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:providerProto.RevocResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_code_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RevocResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RevocResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string msg = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("providerProto.RevocResponse.msg");
        object = msg->mutable_msg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 response_code = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_response_code(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RevocResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:providerProto.RevocResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "providerProto.RevocResponse.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 response_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &response_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:providerProto.RevocResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:providerProto.RevocResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RevocResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:providerProto.RevocResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.RevocResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  // int32 response_code = 2;
  if (this->response_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->response_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:providerProto.RevocResponse)
}

::google::protobuf::uint8* RevocResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:providerProto.RevocResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.RevocResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  // int32 response_code = 2;
  if (this->response_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->response_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:providerProto.RevocResponse)
  return target;
}

size_t RevocResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:providerProto.RevocResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // int32 response_code = 2;
  if (this->response_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->response_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RevocResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:providerProto.RevocResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RevocResponse* source =
      ::google::protobuf::DynamicCastToGenerated<RevocResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:providerProto.RevocResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:providerProto.RevocResponse)
    MergeFrom(*source);
  }
}

void RevocResponse::MergeFrom(const RevocResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:providerProto.RevocResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.response_code() != 0) {
    set_response_code(from.response_code());
  }
}

void RevocResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:providerProto.RevocResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RevocResponse::CopyFrom(const RevocResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:providerProto.RevocResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RevocResponse::IsInitialized() const {
  return true;
}

void RevocResponse::Swap(RevocResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RevocResponse::InternalSwap(RevocResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(response_code_, other->response_code_);
}

::google::protobuf::Metadata RevocResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_provider_2eproto);
  return ::file_level_metadata_provider_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UserCredentials::InitAsDefaultInstance() {
}
class UserCredentials::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserCredentials::kUsernameFieldNumber;
const int UserCredentials::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserCredentials::UserCredentials()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:providerProto.UserCredentials)
}
UserCredentials::UserCredentials(const UserCredentials& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:providerProto.UserCredentials)
}

void UserCredentials::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UserCredentials_provider_2eproto.base);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserCredentials::~UserCredentials() {
  // @@protoc_insertion_point(destructor:providerProto.UserCredentials)
  SharedDtor();
}

void UserCredentials::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserCredentials::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserCredentials& UserCredentials::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UserCredentials_provider_2eproto.base);
  return *internal_default_instance();
}


void UserCredentials::Clear() {
// @@protoc_insertion_point(message_clear_start:providerProto.UserCredentials)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UserCredentials::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UserCredentials*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string username = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("providerProto.UserCredentials.username");
        object = msg->mutable_username();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string password = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("providerProto.UserCredentials.password");
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UserCredentials::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:providerProto.UserCredentials)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "providerProto.UserCredentials.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "providerProto.UserCredentials.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:providerProto.UserCredentials)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:providerProto.UserCredentials)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UserCredentials::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:providerProto.UserCredentials)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.UserCredentials.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.UserCredentials.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:providerProto.UserCredentials)
}

::google::protobuf::uint8* UserCredentials::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:providerProto.UserCredentials)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.UserCredentials.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.UserCredentials.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:providerProto.UserCredentials)
  return target;
}

size_t UserCredentials::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:providerProto.UserCredentials)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserCredentials::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:providerProto.UserCredentials)
  GOOGLE_DCHECK_NE(&from, this);
  const UserCredentials* source =
      ::google::protobuf::DynamicCastToGenerated<UserCredentials>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:providerProto.UserCredentials)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:providerProto.UserCredentials)
    MergeFrom(*source);
  }
}

void UserCredentials::MergeFrom(const UserCredentials& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:providerProto.UserCredentials)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void UserCredentials::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:providerProto.UserCredentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserCredentials::CopyFrom(const UserCredentials& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:providerProto.UserCredentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserCredentials::IsInitialized() const {
  return true;
}

void UserCredentials::Swap(UserCredentials* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserCredentials::InternalSwap(UserCredentials* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata UserCredentials::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_provider_2eproto);
  return ::file_level_metadata_provider_2eproto[kIndexInFileMessages];
}


// ===================================================================

void NewToken::InitAsDefaultInstance() {
}
class NewToken::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewToken::kUserTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewToken::NewToken()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:providerProto.NewToken)
}
NewToken::NewToken(const NewToken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_token().size() > 0) {
    user_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_token_);
  }
  // @@protoc_insertion_point(copy_constructor:providerProto.NewToken)
}

void NewToken::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_NewToken_provider_2eproto.base);
  user_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

NewToken::~NewToken() {
  // @@protoc_insertion_point(destructor:providerProto.NewToken)
  SharedDtor();
}

void NewToken::SharedDtor() {
  user_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NewToken::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NewToken& NewToken::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NewToken_provider_2eproto.base);
  return *internal_default_instance();
}


void NewToken::Clear() {
// @@protoc_insertion_point(message_clear_start:providerProto.NewToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NewToken::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NewToken*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string user_token = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("providerProto.NewToken.user_token");
        object = msg->mutable_user_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NewToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:providerProto.NewToken)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_token().data(), static_cast<int>(this->user_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "providerProto.NewToken.user_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:providerProto.NewToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:providerProto.NewToken)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NewToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:providerProto.NewToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_token = 1;
  if (this->user_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_token().data(), static_cast<int>(this->user_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.NewToken.user_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:providerProto.NewToken)
}

::google::protobuf::uint8* NewToken::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:providerProto.NewToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_token = 1;
  if (this->user_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_token().data(), static_cast<int>(this->user_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "providerProto.NewToken.user_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:providerProto.NewToken)
  return target;
}

size_t NewToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:providerProto.NewToken)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_token = 1;
  if (this->user_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NewToken::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:providerProto.NewToken)
  GOOGLE_DCHECK_NE(&from, this);
  const NewToken* source =
      ::google::protobuf::DynamicCastToGenerated<NewToken>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:providerProto.NewToken)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:providerProto.NewToken)
    MergeFrom(*source);
  }
}

void NewToken::MergeFrom(const NewToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:providerProto.NewToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_token().size() > 0) {

    user_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_token_);
  }
}

void NewToken::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:providerProto.NewToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewToken::CopyFrom(const NewToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:providerProto.NewToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewToken::IsInitialized() const {
  return true;
}

void NewToken::Swap(NewToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewToken::InternalSwap(NewToken* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  user_token_.Swap(&other->user_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata NewToken::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_provider_2eproto);
  return ::file_level_metadata_provider_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace providerProto
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::providerProto::ProviderDataRequest* Arena::CreateMaybeMessage< ::providerProto::ProviderDataRequest >(Arena* arena) {
  return Arena::CreateInternal< ::providerProto::ProviderDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::providerProto::ProviderDataPayload* Arena::CreateMaybeMessage< ::providerProto::ProviderDataPayload >(Arena* arena) {
  return Arena::CreateInternal< ::providerProto::ProviderDataPayload >(arena);
}
template<> PROTOBUF_NOINLINE ::providerProto::UserData* Arena::CreateMaybeMessage< ::providerProto::UserData >(Arena* arena) {
  return Arena::CreateInternal< ::providerProto::UserData >(arena);
}
template<> PROTOBUF_NOINLINE ::providerProto::UserTokenAndSymKey* Arena::CreateMaybeMessage< ::providerProto::UserTokenAndSymKey >(Arena* arena) {
  return Arena::CreateInternal< ::providerProto::UserTokenAndSymKey >(arena);
}
template<> PROTOBUF_NOINLINE ::providerProto::RevocRequest* Arena::CreateMaybeMessage< ::providerProto::RevocRequest >(Arena* arena) {
  return Arena::CreateInternal< ::providerProto::RevocRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::providerProto::RevocResponse* Arena::CreateMaybeMessage< ::providerProto::RevocResponse >(Arena* arena) {
  return Arena::CreateInternal< ::providerProto::RevocResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::providerProto::UserCredentials* Arena::CreateMaybeMessage< ::providerProto::UserCredentials >(Arena* arena) {
  return Arena::CreateInternal< ::providerProto::UserCredentials >(arena);
}
template<> PROTOBUF_NOINLINE ::providerProto::NewToken* Arena::CreateMaybeMessage< ::providerProto::NewToken >(Arena* arena) {
  return Arena::CreateInternal< ::providerProto::NewToken >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
